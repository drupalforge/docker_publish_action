name: 'Drupal Forge Docker Publish'
description: 'Builds and pushes a Docker image for a Drupal Forge template.'
author: 'Drupal Forge'
branding:
  icon: 'package'
  color: 'blue'
inputs:
  dockerhub_username:
    description: 'Docker Hub username'
    required: true
  dockerhub_token:
    description: 'Docker Hub token'
    required: true
  image_repo:
    description: 'Docker Hub image repository'
    required: false
runs:
  using: "composite"
  steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Setup Drupal
      run: |
        echo "PREPARE DIR FOR INSTALL"
        docker exec $WEBSERVER bash -c "sudo rm -rf \$APP_ROOT && sudo mkdir -p \$APP_ROOT"
        docker exec $WEBSERVER bash -c "sudo cp -r /app/. \$APP_ROOT/."
        docker exec $WEBSERVER bash -c "sudo chown -R www:www \$APP_ROOT"
        docker exec $WEBSERVER bash -c "export && cd \$APP_ROOT && ls -al"
        echo "SET UP GIT"
        docker exec $WEBSERVER bash -c "git config --global --add safe.directory \$APP_ROOT"
        echo "INSTALL CUSTOM PACKAGE"
        docker exec $WEBSERVER bash -c "\$APP_ROOT/.devpanel/custom_package_installer.sh"
        echo "INSTALL DRUPAL"
        docker exec $WEBSERVER bash -c "cd \$APP_ROOT && ls -al"
        docker exec $WEBSERVER bash -c "\$APP_ROOT/.devpanel/init.sh"
        echo "DUMPS DATABASE + STATIC FILE"
        docker exec $WEBSERVER bash -c "\$APP_ROOT/.devpanel/create_quickstart.sh"
        docker exec $WEBSERVER bash -c "rm \$APP_ROOT/.devpanel/dumps/files.tgz"
      shell: bash

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}

    - name: Set IMAGE_REPO variable
      run: |
        echo "IMAGE_REPO=${{ inputs.image_repo || github.repository }}" >> $GITHUB_ENV
      shell: bash

    - name: Commit and push the container state to Docker Hub
      run: |
        docker commit $WEBSERVER $IMAGE_REPO:${{ github.ref_name }}
        docker push $IMAGE_REPO:${{ github.ref_name }}
      shell: bash

    - name: Push to tag latest
      if: ${{ github.ref_name == github.event.repository.default_branch }}
      run: |
        docker commit $WEBSERVER $IMAGE_REPO:latest
        docker push $IMAGE_REPO:latest
      shell: bash
